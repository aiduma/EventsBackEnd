{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducers.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","evento","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","onClick","Navbar","useSelector","state","auth","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onSelectEvent","onDoubleClickEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3c384f1.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint}`; //localhost:400/api/\r\n\r\n    if (method === 'GET' ) {\r\n        return fetch (url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n    const url = `${ baseUrl }/${ endpoint}`; //localhost:400/api/\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n\r\n    if (method === 'GET' ) {\r\n        return fetch (url, {\r\n            method,\r\n            headers : {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n    uiOpenModal:'[ui] Open modal',\r\n    uiCloseModal:'[ui] Close modal',\r\n\r\n    eventSetActive: '[event] set Active',\r\n    eventLogout: '[event] logout event',\r\n    \r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n\r\n    eventLoaded: '[event] Events loaded',\r\n    \r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n    return events.map(\r\n        (evento) => ({\r\n            ...evento,\r\n            end : moment(evento.end).toDate(),\r\n            start : moment(evento.start).toDate()\r\n        })\r\n    );\r\n}\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n    \r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch(eventAddNew( event ));\r\n            }\r\n                \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const startEventDelete = () => {\r\n    return async(dispatch, getState ) => {\r\n        const { id } =  getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            console.log('...borrando', body);\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error1', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }        \r\n    }\r\n}\r\n\r\nconst eventDeleted = ( ) => ({\r\n    type: types.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n \r\n            const events = prepareEvents (body.eventos);\r\n\r\n            dispatch( eventLoaded(events));\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = ( events ) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\n\r\nexport const eventLogout = () =>({\r\n    type: types.eventLogout\r\n});\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchSinToken( 'auth', { email, password} , 'POST');\r\n\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login (\r\n                {\r\n                    uid : body.uid,\r\n                    name : body.name\r\n                } \r\n            ));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchSinToken( 'auth/new', { name, email, password} , 'POST');\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login (\r\n                {\r\n                    uid : body.uid,\r\n                    name : body.name\r\n                } \r\n            ));\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken( 'auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login (\r\n                {\r\n                    uid : body.uid,\r\n                    name : body.name\r\n                } \r\n            ));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }        \r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\n\r\nconst logout = () => ({\r\n    type : types.authLogout\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm ({\r\n        lEmail: 'aiduma98@hotmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm ({\r\n        rName: 'Alberto',\r\n        rEmail: 'aiduma98@hotmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire(\"Error\", 'Las contraseñas deben ser iguales', \"error\" );\r\n        }\r\n\r\n        dispatch(startRegister(rName, rEmail, rPassword1));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit= { handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value= { lEmail }\r\n                                onChange = {handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value= {lPassword}\r\n                                onChange = {handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name = \"rName\"\r\n                                value = { rName }\r\n                                onChange = { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name = \"rEmail\"\r\n                                value = { rEmail }\r\n                                onChange = { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name = \"rPassword1\"\r\n                                value = { rPassword1 }\r\n                                onChange = { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name = \"rPassword2\"\r\n                                value = { rPassword2 }\r\n                                onChange = { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" \r\n                                onClick = { handleRegister }\r\n                                />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\n\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\" onClick = { handleLogout }>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong> {title} </strong>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate, eventUpdated } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowPlus1 = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent,setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues(\r\n            {\r\n                ...formValues,\r\n                [target.name]: target.value\r\n            }\r\n        );\r\n    };\r\n\r\n    const closeModal = () => {\r\n        //TODO: CERRAR EL MODAL\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    };\r\n\r\n    const handleStartDateChange = (e) =>{\r\n        setDateStart(e);\r\n        setFormValues(\r\n            {\r\n                ...formValues,\r\n                start: e\r\n            }\r\n        );\r\n    };\r\n\r\n    const handleEndDateChange = (e) =>{\r\n        setDateEnd(e);\r\n        setFormValues(\r\n            {\r\n                ...formValues,\r\n                end: e\r\n            }\r\n        );\r\n    };\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            Swal.fire('Error','La fecha fin debe de ser mayor a a fecha de inicio','Error');\r\n            return;\r\n        }\r\n\r\n        if (title.trim().length <2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        \r\n        //TODO: REALIZAR GRABACION DE LA BASE DE DATOS\r\n        if ( activeEvent) {\r\n            dispatch( eventStartUpdate( formValues ));\r\n        } else {\r\n            dispatch(eventStartAddNew( formValues));\r\n        };\r\n        \r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            //onAfterOpen={afterOpenModal}\r\n            onRequestClose={ closeModal }\r\n            style={customStyles}\r\n            closeTimeoutMS= { 200 }\r\n            className = \"modal\"\r\n            overlayClassName = \"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit = { handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        minDate = { dateStart }\r\n                        value={ dateEnd }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className= {`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value = { title }\r\n                        onChange = { handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value = { notes }\r\n                        onChange = { handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form> \r\n      </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(eventClearActiveEvent());\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick = {handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>    \r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startEventDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startEventDelete()); \r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick = { handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport {Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport  'moment/locale/es';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\nconst events = [{\r\n    title:'Cumpleaños del jefe',\r\n    start: moment().toDate(),\r\n    end: moment().add(2,'hour').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: \"Comprar el pastel\",\r\n    user: {\r\n        _id: '123',\r\n        name: 'Alberto'    \r\n    }\r\n}]\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth); \r\n    \r\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView') || \"month\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    };\r\n\r\n    const onSelectEvent = (e) => {\r\n       dispatch(eventSetActive(e));\r\n    };\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    };\r\n\r\n    const onSelectedSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n  \r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id) ?  '#367CF7' : \"#465660\",\r\n            borderRadius: '0px',\r\n            opacity: 0.8, \r\n            display: 'block',\r\n            color: 'white'\r\n        };\r\n\r\n        return { style };\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\" >\r\n            <Navbar/>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter = { eventStyleGetter }\r\n                onSelectEvent = { onSelectEvent }\r\n                onDoubleClickEvent = { onDoubleClick }\r\n                onSelectSlot = { onSelectedSlot }\r\n                selectable = { true }\r\n                onView = { onViewChange }\r\n                view = { lastView }\r\n                components = {\r\n                    {event: CalendarEvent}\r\n                }\r\n            />\r\n\r\n            <AddNewFab/>\r\n                { (activeEvent) && <DeleteEventFab/> }\r\n            <CalendarModal/>       \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch ( startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return (<h5>Espere....</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen }\r\n                        isAuthenticated = { !!uid }\r\n                    />      \r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen }\r\n                        isAuthenticated = { !!uid } \r\n                    />\r\n\r\n                    <Redirect to=\"/\" />   \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    uid: null,\r\n    name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title:'Cumpl1eaños del jefe11',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hour').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: \"Comprar el pastel\",\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Alberto'    \r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state= initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }    \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload \r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( e=> (e.id === action.payload.id) ? action.payload : e)\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( e=> (e.id !== state.activeEvent.id)),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state= initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducers\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        ui: uiReducer,\r\n        calendar: calendarReducer,\r\n        auth: authReducer\r\n        //TODO: CalendarReducer\r\n    }\r\n)\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk)\r\n    )\r\n);\r\n\r\n","import React from 'react';\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store = {store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}